{
  "name": "@mmisty/cypress-allure-adapter",
  "version": "0.0.0",
  "description": "cypress allure adapter to generate allure results during tests execution (Allure TestOps compatible)",
  "main": "index.js",
  "repository": "git@github.com:mmisty/cypress-allure-adapter.git",
  "homepage": "https://github.com/mmisty/cypress-allure-adapter#readme",
  "publishConfig": {
    "registry": "https://registry.npmjs.org/"
  },
  "keywords": [
    "cypress",
    "e2e",
    "tests",
    "typescript",
    "allure",
    "TestOps",
    "plugins",
    "reporter",
    "cypress-allure-adapter",
    "@mmisty/cypress-allure-adapter"
  ],
  "peerDependencies": {
    "cypress": ">= 11.x"
  },
  "license": "MIT",
  "author": "Taisia Pitko (mmisty) <minydas@yandex.ru>",
  "scripts": {
    "husky:install": "husky install",
    "lint": "eslint --fix '**/*.{ts,tsx,js}'",
    "test:jest:cy": "CI=true COVERAGE=true jest --runInBand --testPathPattern=\"tests/test-folder/mocha-events\" --reporters=default --reporters=jest-junit",
    "test:jest": "CI=true COVERAGE=true jest --runInBand --coverage --testPathIgnorePatterns=\"tests/test-folder/(mocha-events)|(allure-plugin)\" --reporters=default --reporters=jest-junit",
    "test:cov": "npm run test:jest && npm run test:jest:cy && npm run cov:merge",
    "cy": "cypress",
    "cy:open": "npm run cy -- open",
    "cy:run": "npm run cy -- run --browser chrome --headless",
    "cy:run:grep": "CYPRESS_GREP_RESULTS_FILE='./filtered_tests.json' cy-grep --script 'npm run cy:run'",
    "cy:run:cov": "COVERAGE_REPORT_DIR=reports/coverage-cypress COVERAGE=true npm run cy -- run || true",
    "cy:open:cov": "COVERAGE_REPORT_DIR=reports/coverage-cypress COVERAGE=true npm run cy -- open",
    "build": "rm -rf lib && tsc --project tsconfig.build.json",
    "build:tests": "tsc && cd tests && tsc",
    "build:cy": "cd integration && tsc",
    "build:all": "npm run build && npm run build:cy && npm run build:tests",
    "cov:fin": "npx nyc report -t reports/coverage-full --report-dir reports/coverage-full-total",
    "cov:merge": "node ./.scripts/merge.js --cypress reports/coverage-cypress --jest reports/coverage-jest --out reports/coverage-temp --report reports/coverage-full && npm run cov:fin",
    "cov": "http-server reports/coverage-full/lcov-report",
    "cov:jest": "http-server reports/coverage-jest/lcov-report",
    "cov:cy": "http-server reports/coverage-cypress/lcov-report",
    "cov:check": "COVERAGE_TEMP=reports/coverage-temp nyc check-coverage",
    "all": "npm run pre && npm run cov:check && npm run cov",
    "pre": "rm -rf ./node_modules/.cache lib reports coverage-nyc .nyc_output && npm run lint && npm run build:all && npm run test:cov && npm run cov:merge",
    "pack": "npm run build && cp package.json ./lib/package.json && cp README.pack.md ./lib/README.md && cp CHANGELOG.md ./lib/CHANGELOG.md && sh .scripts/remove.sh && cd lib && npm version $ver --no-git-tag-version ",
    "prepublish": "npm run lint",
    "prepublishOnly": "{ echo \"Run script 'npm run publish:pack', 'npm run publish:minor', etc from package.json\n\"; exit 1; }",
    "publishPack": "npm run pack && cd lib && npm publish",
    "publish:alpha": "export ver=$(semver $(npm show . version) --increment -i prerelease  --preid 'alpha') && npm run publishPack && npm run postpublish",
    "publish:patch": "export ver=$(semver $(npm show . version) --increment -i patch) && npm run publishPack && npm run postpublish",
    "publish:minor": "export ver=$(semver $(npm show . version) --increment -i minor) && npm run publishPack && npm run postpublish",
    "publish:major": "export ver=$(semver $(npm show . version) --increment -i major) && npm run publishPack && npm run postpublish",
    "publish:pack": "export ver=\"1.0.1\" && npm run publishPack && npm run postpublish",
    "postpublish": "git tag v$ver"
  },
  "overrides": {
    "loader-utils": "1.4.2"
  },
  "jest-junit": {
    "suiteName": "jest tests",
    "outputDirectory": "./reports/jest",
    "outputName": "junit.xml",
    "uniqueOutputName": "false",
    "classNameTemplate": "{classname}-{title}",
    "titleTemplate": "{classname}-{title}",
    "ancestorSeparator": " â€º ",
    "usePathForSuiteName": "true"
  },
  "devDependencies": {
    "@cypress/code-coverage": "^3.11.0",
    "@ephesoft/webpack.istanbul.loader": "^2.2.0",
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@mmisty/cypress-grep": "^1.6.9",
    "@types/cors": "^2.8.13",
    "@types/debug": "^4.1.8",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.4",
    "@types/node": "^18.11.9",
    "@types/uuid": "^9.0.2",
    "@types/ws": "^8.5.5",
    "@typescript-eslint/eslint-plugin": "^5.44.0",
    "@typescript-eslint/parser": "^5.44.0",
    "allure-commandline": "^2.24.0",
    "cypress": "^13.3.3",
    "cypress-redirect-browser-log": "^1.1.2",
    "eslint": "^8.46.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-cypress": "^2.14.0",
    "eslint-plugin-import": "^2.28.0",
    "eslint-plugin-jest": "^27.2.3",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-promise": "^6.1.1",
    "express": "^4.18.2",
    "husky": "^8.0.2",
    "istanbul-lib-coverage": "^3.2.0",
    "jest": "^29.6.2",
    "jest-environment-jsdom": "^29.6.2",
    "jest-junit": "^16.0.0",
    "jest-test-each": "^0.9.1",
    "nyc": "^15.1.0",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.4.4",
    "ts-node": "^10.9.1",
    "tsconfig-paths-webpack-plugin": "^4.1.0",
    "typescript": "^4.9.3",
    "webpack": "^5.88.2"
  },
  "dependencies": {
    "allure-js-commons": "^2.7.0",
    "allure-js-parser": "^0.0.7",
    "debug": "^4.3.4",
    "fast-glob": "^3.3.1",
    "uuid": "^9.0.0",
    "uuid-by-string": "^4.0.0",
    "ws": "^8.14.0"
  },
  "engines": {
    "node": ">=16",
    "npm": ">=8"
  },
  "volta": {
    "node": "18.12.0",
    "npm": "8.19.2"
  }
}
